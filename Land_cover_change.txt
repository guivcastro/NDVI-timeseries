// Google Earth Engine script


// Land cover change analysis from two Land Cover Maps with 25m of resolution

// Load land cover maps
var img90_native = ee.Image('path/to/file');
var img23_native = ee.Image('path/to/file');

// Rename bands
var lc90 = img90_native.select('b1').rename('lc90').toInt();
var lc23 = img23_native.select('b1').rename('lc23').toInt();

// Resample to 30m & Align
lc90 = lc90.reproject({crs: lc90.projection(), scale: 30});
lc23 = lc23.reproject({crs: lc90.projection(), scale: 30});

// Define AOI as intersection of both rasters
var aoi = lc90.geometry().intersection(lc23.geometry(), ee.ErrorMargin(1));
lc90 = lc90.clip(aoi);
lc23 = lc23.clip(aoi);

// Mask No-Data Pixels
var maskNoData = lc90.neq(0); // pixels â‰  0
lc90 = lc90.updateMask(maskNoData);
lc23 = lc23.updateMask(maskNoData);

// Mask land cover classes
var builtUpCodes = ee.List([0, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21]);
var builtMask = lc23.remap(builtUpCodes, ee.List.repeat(1, builtUpCodes.length()), 0);
lc90 = lc90.updateMask(builtMask.not());
lc23 = lc23.updateMask(builtMask.not());

// Filter for land cover classes of interest
var ndviClasses = ee.List([1,2,3,4,5,6,7,9,10]);
var ndviMask = lc90.remap(ndviClasses, ee.List.repeat(1, ndviClasses.length()), 0);
lc90 = lc90.updateMask(ndviMask);
lc23 = lc23.updateMask(ndviMask);

// Detect land cover changes
var change = lc23.neq(lc90).rename('change');

// Load boundaries
var boundaries = ee.FeatureCollection('path/to/file');
change = change.clip(boundaries);

// Visualize land cover changes
Map.centerObject(boundaries, 7);
Map.addLayer(ee.Image.constant(1), {palette:['white']}, 'Background');
Map.addLayer(change, {min:0, max:1, palette:['lightgrey','darkred']}, 'Land cover change 1990-2023');

// Load MK Tau raster
var ndviTau = ee.Image('path/to/file')
                .reproject({crs: lc90.projection(), scale: 30})
                .updateMask(ndviMask);

// Mask NDVI Tau by change and no-change
var ndviNoChange = ndviTau.updateMask(change.eq(0));
var ndviChange = ndviTau.updateMask(change.eq(1));

Map.addLayer(ndviNoChange, {min:0, max:1, palette:['white','blue']}, 'NDVI Tau - No Change');
Map.addLayer(ndviChange, {min:0, max:1, palette:['white','red']}, 'NDVI Tau - Change');

// Export rasters
Export.image.toAsset({
  image: change,
  description: 'file_name',
  assetId: 'path/to/asset',
  region: boundaries,
  scale: 30,
  maxPixels: 1e13,
  crs: 'EPSG:32631'
});

Export.image.toAsset({
  image: ndviNoChange,
  description: 'NDVI_Tau_NoChange_30m',
  region: boundaries,
  scale: 30,
  maxPixels: 1e13,
  crs: 'EPSG:32631'
});

Export.image.toAsset({
  image: ndviChange,
  description: 'NDVI_Tau_Change_30m',
  region: boundaries,
  scale: 30,
  maxPixels: 1e13,
  crs: 'EPSG:32631'
});

// Pixel count & change ratio
var changeCount = change.reduceRegion({
  reducer: ee.Reducer.sum(),
  geometry: boundaries,
  scale: 30,
  maxPixels: 1e13
}).get('change');

var totalCount = change.updateMask(maskNoData).reduceRegion({
  reducer: ee.Reducer.count(),
  geometry: boundaries,
  scale: 30,
  maxPixels: 1e13
}).get('change');

var noChangeCount = ee.Number(totalCount).subtract(ee.Number(changeCount));
var ratioChange = ee.Number(changeCount).divide(ee.Number(totalCount)).multiply(100);

print('Changed pixels =', changeCount);
print('Unchanged pixels =', noChangeCount);
print('Total pixels =', totalCount);
print('Land cover change ratio (%) =', ratioChange.format('%.2f'));

// Change perland cover class
var changeMask = lc23.neq(lc90);

// Compute per-class change
var changePerClass = ndviClasses.map(function(c) {
  c = ee.Number(c);
  var classMask = lc90.eq(c).and(changeMask);
  var count = classMask.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: boundaries,
    scale: 30,
    maxPixels: 1e13
  }).get('lc90');
  
  return ee.Feature(null, {
    'class_1990': c,
    'changed_pixels': ee.Number(count)
  });
});

// Convert to FeatureCollection
var changeFC = ee.FeatureCollection(changePerClass);

// Add total
var changeCount = ee.Number(change.reduceRegion({
  reducer: ee.Reducer.sum(),
  geometry: boundaries,
  scale: 30,
  maxPixels: 1e13
}).get('change'));

var totalCount = ee.Number(change.updateMask(maskNoData).reduceRegion({
  reducer: ee.Reducer.count(),
  geometry: boundaries,
  scale: 30,
  maxPixels: 1e13
}).get('change'));

var noChangeCount = totalCount.subtract(changeCount);

// Create a summary Feature
var summaryFeature = ee.Feature(null, {
  'class_1990': 'TOTAL',
  'changed_pixels': changeCount,
  'no_change_pixels': noChangeCount,
  'total_pixels': totalCount
});

// Add summary row to the FeatureCollection
changeFC = changeFC.map(function(f) {
  // Add empty columns for consistency
  return f.set('no_change_pixels', null)
          .set('total_pixels', null);
}).merge(ee.FeatureCollection([summaryFeature]));

print('Change per NDVI-valid class + totals', changeFC);

// Export CSV
Export.table.toDrive({
  collection: changeFC,
  description: 'ZZZZZ',
  fileFormat: 'CSV'
});

